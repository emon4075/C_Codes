Certainly, let's break down the process of generating random numbers in C programming step by step.

1. **Include Headers:** To work with random numbers and time functions, you need to include the necessary header files at the beginning of your program.

```c
#include <stdio.h>   // For standard I/O functions
#include <stdlib.h>  // For rand() and srand() functions
#include <time.h>    // For time() function
```

2. **Seeding the Random Number Generator:** The `rand()` function generates pseudo-random numbers. It's initialized with a seed value, and from that seed, it produces a sequence of numbers that appears random. To get different sequences each time you run the program, you should seed the random number generator with a changing value, often based on the current time.

```c
srand(time(0));  // Seed the random number generator with the current time
```

Here, `time(0)` returns the current time as the number of seconds since January 1, 1970 (UNIX timestamp). This ensures that every time you run your program, the random number generator gets a different starting point.

3. **Generating Random Numbers:** Once the random number generator is seeded, you can use the `rand()` function to generate random numbers. However, the raw output from `rand()` is usually a large integer. If you want a random number within a specific range (e.g., between 1 and 100), you can use the modulus operator (`%`) to restrict the range and then add the lower limit.

```c
int random_number = rand() % (upper_limit - lower_limit + 1) + lower_limit;
```

For example, to generate a random number between 1 and 100:

```c
int random_number = rand() % 100 + 1;
```

4. **Using the Generated Random Number:** You can now use the generated random number in your program as needed. In the context of your question, you could use it as a guessed number, a game element, or any other purpose.

```c
printf("Random number: %d\n", random_number);
```

5. **Full Example:**
Here's the entire example program:

```c
#include <stdio.h>
#include <stdlib.h>
#include <time.h>

int main() {
    int random_number;

    srand(time(0));  // Seed the random number generator with the current time

    // Generate a random number between 1 and 100
    random_number = rand() % 100 + 1;

    printf("Random number: %d\n", random_number);

    return 0;
}
```

Remember, while this is a simple explanation of generating random numbers, it's important to understand that these numbers are not truly random but rather pseudorandom. For applications requiring high-quality randomness, cryptographic purposes, or simulations, specialized random number generators and libraries should be used.